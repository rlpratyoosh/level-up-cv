generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model profile {
  id             String            @id
  fullname       String?
  bio            String?
  avatarurl      String?
  title          String?
  totalxp        Int               @default(0)
  level          Int               @default(1)
  resumes        resume[]
  skills         skill[]
  projects       project[]
  experiences    experience[]
  educations     education[]
  certifications certification[]
  achievements   userAchievement[]
  activities     activity[]
  createdat      DateTime          @default(now())
}


model resume {
  id          String   @id @default(cuid())
  profileid   String
  title       String
  includedids Json?
  createdat   DateTime @default(now())
  updatedat   DateTime @updatedAt
  profile     profile  @relation(fields: [profileid], references: [id])
}

model skill {
  id          String             @id @default(cuid())
  profileid   String
  name        String
  totalxp     Int                @default(0)
  level       Int                @default(1)
  title       String?
  projects    projectskills[]
  experiences experienceskills[]
  createdat   DateTime           @default(now())
  updatedat   DateTime           @updatedAt
  profile     profile            @relation(fields: [profileid], references: [id])
}

model project {
  id          String          @id @default(cuid())
  profileid   String
  title       String
  description String?
  link        String?
  skills      projectskills[]
  startdate   DateTime?
  enddate     DateTime?
  createdat   DateTime        @default(now())
  updatedat   DateTime        @updatedAt
  profile     profile         @relation(fields: [profileid], references: [id])
}

model projectskills {
  id        String  @id @default(cuid())
  projectid String
  skillid   String
  project   project @relation(fields: [projectid], references: [id])
  skill     skill   @relation(fields: [skillid], references: [id])
}

model experience {
  id        String             @id @default(cuid())
  profileid String
  role      String
  company   String
  summary   String?
  startdate DateTime?
  enddate   DateTime?
  skills    experienceskills[]
  createdat DateTime           @default(now())
  updatedat DateTime           @updatedAt
  profile   profile            @relation(fields: [profileid], references: [id])
}

model experienceskills {
  id           String     @id @default(cuid())
  experienceid String
  skillid      String
  experience   experience @relation(fields: [experienceid], references: [id])
  skill        skill      @relation(fields: [skillid], references: [id])
}

model education {
  id          String    @id @default(cuid())
  profileid   String
  institution String
  degree      String
  startdate   DateTime?
  enddate     DateTime?
  createdat   DateTime  @default(now())
  updatedat   DateTime  @updatedAt
  profile     profile   @relation(fields: [profileid], references: [id])
}

model certification {
  id             String    @id @default(cuid())
  profileid      String
  title          String
  issuer         String
  issuedate      DateTime?
  expirationdate DateTime?
  link           String?
  createdat      DateTime  @default(now())
  updatedat      DateTime  @updatedAt
  profile        profile   @relation(fields: [profileid], references: [id])
}

model achievement {
  id               String            @id @default(cuid())
  title            String
  description      String?
  userachievements userAchievement[]
  createdat        DateTime          @default(now())
}

model userAchievement {
  id            String      @id @default(cuid())
  profileid     String
  achievementid String
  profile       profile     @relation(fields: [profileid], references: [id])
  achievement   achievement @relation(fields: [achievementid], references: [id])
  createdat     DateTime    @default(now())
}

model activity {
  id        String       @id @default(cuid())
  profileid String
  type      activitytype
  details   String
  createdat DateTime     @default(now())
  profile   profile      @relation(fields: [profileid], references: [id])
}

enum activitytype {
  SKILL
  PROJECT
  EXPERIENCE
  EDUCATION
  CERTIFICATION
  ACHIEVEMENT
}